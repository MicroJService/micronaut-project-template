name: Custom files sync
on:
  push:
    branches:
      - master
jobs:
  sync-files:
    if: github.repository == 'micronaut-projects/micronaut-project-template'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo:
          - azure
          - data
          - flyway
          - gcp
          - groovy
          - grpc
          - jaxrs
          - kafka
          - kotlin
          - micrometer
          - mongodb
          - nats
          - neo4j
          - netflix
          - rabbitmq
          - redis
          - reactor
          - rxjava1
          - rxjava3
          - servlet
          - spring
          - sql
          - test
          - openapi
          - views
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: source
      - name: Checkout target
        uses: actions/checkout@v2
        with:
          repository: micronaut-projects/micronaut-${{ matrix.repo }}
          path: target
          token: ${{ secrets.GH_TOKEN }}
      - name: Copy files from source to target
        run: |
          while IFS= read -r file; do
              dest="$(dirname $file)"
              mkdir -p target/$dest
              cp -r source/$file target/$dest
          done <<< "$FILES"
        env:
          FILES: |-
            .github/workflows/central-sync.yml
            .github/workflows/dependency-check.yml
            .github/workflows/dependency-update.yml
            .github/workflows/gradle.yml
            .github/workflows/label-sync.yml
            .github/workflows/release.yml
            .github/workflows/release-notes.yml
            gradle/*
            gradlew*
            .gitignore
            ISSUE_TEMPLATE.md
            LICENSE
            config*
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        with:
          path: target
          token: ${{ secrets.GH_TOKEN }}
          committer: GitHub <noreply@github.com>
          author: micronaut-build <micronaut-build@users.noreply.github.com>
          commit-message: Update common files
          title: "[TEST] Update common files"
          body: Update common files
          labels: "relates-to: build"
          branch-suffix: short-commit-hash

# Pending repos:
#          - rss
#          - liquibase
#          - jmx
#          - acme
#          - aws
#          - cache
#          - cassandra
#          - couchbase
#          - core
#          - elasticsearch
#          - graphql
#          - hibernate-validator
#          - jackson-xml
#          - jms
#          - kubernetes
#          - oauth2
#          - picocli
#          - ratelimiter
#          - security
